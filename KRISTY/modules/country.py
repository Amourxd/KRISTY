from telethon.tl.functions.photos import GetUserPhotosRequest
from telethon.tl.functions.users import GetFullUserRequest
from telethon.tl.types import MessageEntityMentionName
from telethon.utils import get_input_location
import flag
import html, os
from countryinfo import CountryInfo
from KRISTY import telethn as borg
from KRISTY.events import register


@register(pattern="^/country (.*)")
async def msg(event):
    if event.fwd_from:
        return
    input_str = event.pattern_match.group(1)
    lol = input_str
    country = CountryInfo(lol)
    try:
        a = country.info()
    except:
        await event.reply("·¥Ñ·¥è·¥ú…¥·¥õ Ä è …¥·¥è·¥õ ·¥Ä·¥†·¥Ä…™·¥Ä ô ü·¥á ·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ ü è  ô·¥Ä ô èü•Ä")
    name = a.get("name")
    bb = a.get("altSpellings")
    hu = ""
    for p in bb:
        hu += p + ",  "

    area = a.get("area")
    borders = ""
    hell = a.get("borders")
    for fk in hell:
        borders += fk + ",  "

    call = ""
    WhAt = a.get("callingCodes")
    for what in WhAt:
        call += what + "  "

    capital = a.get("capital")
    currencies = ""
    fker = a.get("currencies")
    for FKer in fker:
        currencies += FKer + ",  "

    HmM = a.get("demonym")
    geo = a.get("geoJSON")
    pablo = geo.get("features")
    Pablo = pablo[0]
    PAblo = Pablo.get("geometry")
    EsCoBaR = PAblo.get("type")
    iso = ""
    iSo = a.get("ISO")
    for hitler in iSo:
        po = iSo.get(hitler)
        iso += po + ",  "
    fla = iSo.get("alpha2")
    nox = fla.upper()
    okie = flag.flag(nox)

    languages = a.get("languages")
    lMAO = ""
    for lmao in languages:
        lMAO += lmao + ",  "

    nonive = a.get("nativeName")
    waste = a.get("population")
    reg = a.get("region")
    sub = a.get("subregion")
    tik = a.get("timezones")
    tom = ""
    for jerry in tik:
        tom += jerry + ",   "

    GOT = a.get("tld")
    lanester = ""
    for targaryen in GOT:
        lanester += targaryen + ",   "

    wiki = a.get("wiki")

    caption = f"""<b><u>…™…¥Íú∞·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥ …¢·¥Ä·¥õ ú·¥á Ä·¥á·¥Ö Íú±·¥ú·¥Ñ·¥Ñ·¥áÍú±Íú±Íú∞·¥ú ü ü è  ô·¥Ä ô èü•Ä</b></u>
<b>
·¥Ñ·¥è·¥ú…¥·¥õ Ä è …¥·¥Ä·¥ç·¥á:- {name}
·¥Ä ü·¥õ·¥á Ä…¥·¥Ä·¥õ…™·¥†·¥á Íú±·¥ò·¥á ü ü…™…¥…¢Íú±:- {hu}
·¥Ñ·¥è·¥ú…¥·¥õ Ä è ·¥Ä Ä·¥á·¥Ä:- {area} Íú±Q·¥ú·¥Ä Ä·¥á ·¥ã…™ ü·¥è·¥ç·¥á·¥õ·¥á ÄÍú±
 ô·¥è Ä·¥Ö·¥á ÄÍú±:- {borders}
·¥Ñ·¥Ä ü ü…™…¥…¢ ·¥Ñ·¥è·¥Ö·¥áÍú±:- {call}
·¥Ñ·¥è·¥ú…¥·¥õ Ä è'Íú± ·¥Ñ·¥Ä·¥ò…™·¥õ·¥Ä ü:- {capital}
·¥Ñ·¥è·¥ú…¥·¥õ Ä è'Íú± ·¥Ñ·¥ú Ä Ä·¥á…¥·¥Ñ è:- {currencies}
·¥Ñ·¥è·¥ú…¥·¥õ Ä è'Íú± Íú∞ ü·¥Ä…¢:- {okie}
·¥Ö·¥á·¥ç·¥è…¥ è·¥ç:- {HmM}
·¥Ñ·¥è·¥ú…¥·¥õ Ä è ·¥õ è·¥ò·¥á:- {EsCoBaR}
…™Íú±·¥è …¥·¥Ä·¥ç·¥áÍú±:- {iso}
 ü·¥Ä…¥…¢·¥ú·¥Ä…¢·¥áÍú±:- {lMAO}
…¥·¥Ä·¥õ…™·¥†·¥á …¥·¥Ä·¥ç·¥á:- {nonive}
·¥ò·¥è·¥ò·¥ú ü·¥Ä·¥õ…™·¥è…¥:- {waste}
 Ä·¥á…¢…™·¥è…¥:- {reg}
Íú±·¥ú ô  Ä·¥á…¢…™·¥è…¥:- {sub}
·¥õ…™·¥ç·¥á ·¥¢·¥è…¥·¥áÍú±:- {tom}
·¥õ·¥è·¥ò  ü·¥á·¥†·¥á ü ·¥Ö·¥è·¥ç·¥Ä…™…¥:- {lanester}
·¥°…™·¥ã…™·¥ò·¥á·¥Ö…™·¥Ä:- {wiki}</b>

Gathered By KRISTY ‚ú®.</b>
"""

    await borg.send_message(
        event.chat_id,
        caption,
        parse_mode="HTML",
    )

    await event.delete()

    
    __help__ = """
 ¬ª `/country` <country-name> :  …¢…™·¥†·¥áÍú± ·¥Ö·¥á·¥õ·¥Ä…™ ü ·¥Ä ô·¥è·¥ú·¥õ ·¥Ñ·¥è·¥ú…¥·¥õ Ä è
 """
__mod_name__ = "COUNTRY"
