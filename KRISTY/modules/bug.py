from datetime import datetime

from pyrogram import filters
from pyrogram.enums import ChatType
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup, Message

from KRISTY import OWNER_ID, START_IMG, SUPPORT_CHAT, pbot
from KRISTY.utils.errors import capture_err


def content(msg: Message) -> [None, str]:
    text_to_return = msg.text

    if msg.text is None:
        return None
    if " " in text_to_return:
        try:
            return msg.text.split(None, 1)[1]
        except IndexError:
            return None
    else:
        return None


@pbot.on_message(filters.command("bug"))
@capture_err
async def bug(_, msg: Message):
    if msg.chat.username:
        chat_username = f"@{msg.chat.username} [`{msg.chat.id}`]"
    else:
        chat_username = f"·¥© Ä…™·¥†·¥Ä·¥õ·¥á …¢ Ä·¥è·¥ú·¥© [`{msg.chat.id}`]"
    bugs = content(msg)
    datetimes_fmt = "%d-%m-%Y"
    datetimes = datetime.utcnow().strftime(datetimes_fmt)

    bug_report = f"""
**# ô·¥ú…¢**

·¥ús·¥á Ä …™·¥Ö : `{msg.from_user.id}`
·¥Ñ ú·¥Ä·¥õ : @{chat_username}
 Ä·¥á·¥©·¥è Ä·¥õ·¥á·¥Ö  ô è : {msg.from_user.mention}

 ô·¥ú…¢ : `{bugs}`

·¥á·¥†·¥á…¥·¥õ s·¥õ·¥Ä·¥ç·¥© : `{datetimes}`"""

    if msg.chat.type == ChatType.PRIVATE:
        return await msg.reply_text("<b>¬ª ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö …™s ·¥è…¥ ü è “ì·¥è Ä …¢ Ä·¥è·¥ú·¥©s  ô·¥Ä ô èü•Ä.</b>")

    elif msg.from_user.id == OWNER_ID:
        return await msg.reply_text(
                "<b>¬ª ·¥Ä Ä·¥á  è·¥è·¥ú ·¥Ñ·¥è·¥ç·¥á·¥Ö è ·¥ç·¥á  ô·¥Ä ô èü•Ä,  è·¥è·¥ú' Ä·¥á ·¥õ ú·¥á ·¥è·¥°…¥·¥á Ä ·¥è“ì ·¥õ ú·¥á  ô·¥è·¥õ.</b>",
            )
    else:
        if bugs:
            await msg.reply_text(
                f"<b> ô·¥ú…¢  Ä·¥á·¥©·¥è Ä·¥õ :</b> `{bugs}`\n\n"
                "<b>¬ª  ô·¥ú…¢ s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è  Ä·¥á·¥©·¥è Ä·¥õ·¥á·¥Ö ·¥Ä·¥õ s·¥ú·¥©·¥©·¥è Ä·¥õ ·¥Ñ ú·¥Ä·¥õ  ô·¥Ä ô èü•Ä!!</b>",
                reply_markup=InlineKeyboardMarkup(
                    [[InlineKeyboardButton("‚Ä¢ ·¥Ñ ü·¥ès·¥á ‚Ä¢", callback_data="close")]]
                ),
            )
            await pbot.send_photo(
                SUPPORT_CHAT,
                photo=START_IMG,
                caption=bug_report,
                reply_markup=InlineKeyboardMarkup(
                    [
                        [
                            InlineKeyboardButton("‚Ä¢ ·¥†…™·¥á·¥°  ô·¥ú…¢ ‚Ä¢", url=msg.link),
                            InlineKeyboardButton("‚Ä¢ ·¥Ñ ü·¥ès·¥á ‚Ä¢", callback_data="close_")
                        ],
                    ]
                ),
            )
        else:
            await msg.reply_text(
                f"<b>¬ª …¥·¥è  ô·¥ú…¢ ·¥õ·¥è  Ä·¥á·¥©·¥è Ä·¥õ  ô·¥Ä ô èü•Ä!</b>",
            )


@pbot.on_callback_query(filters.regex("close"))
async def close_reply(_, CallbackQuery):
    await CallbackQuery.message.delete()


@pbot.on_callback_query(filters.regex("close_"))
async def close_send_photo(_, CallbackQuery):
    if CallbackQuery.from_user.id != OWNER_ID:
        return await CallbackQuery.answer(
            " è·¥è·¥ú ·¥Ö·¥è…¥'·¥õ  ú·¥Ä·¥†·¥á  Ä…™…¢ ú·¥õs ·¥õ·¥è ·¥Ñ ü·¥ès·¥á ·¥õ ú…™s  ô·¥Ä ô èü•Ä!.", show_alert=True
        )
    else:
        await CallbackQuery.message.delete()


__help__ = """
 ¬ª `/bug` <text> :  Íú∞·¥è Ä  Ä·¥á·¥ò·¥è Ä·¥õ…™…¥…¢ ·¥Ä…¥ è  ô·¥ú…¢ …™…¥  ô·¥è·¥õ
 """
__mod_name__ = "BUG"
